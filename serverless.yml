service: auction-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    AUCTION_TABLE_NAME: ${self:custom.AuctionTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    AUCTIONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}
  iamRoleStatements:
    - ${file(./iam/auctionTableIAM.yml):AuctionTableIAM}
    - ${file(./iam/mailQueueIAM.yml):MailQueueIAM}
    - ${file(./iam/auctionsBucketIAM.yml):AuctionsBucketIAM}

resources:
  Resources:
    AuctionTable: ${file(./resources/auctionTable.yml):AuctionTable}
    AuctionsBucket: ${file(./resources/auctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicy: ${file(./resources/auctionsBucket.yml):AuctionsBucketPolicy}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          cors: true
          authorizer: ${self:custom.authorizer}
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          cors: true
          authorizer: ${self:custom.authorizer}
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          cors: true
          authorizer: ${self:custom.authorizer}
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          cors: true
          authorizer: ${self:custom.authorizer}
  uploadAuctionPicture:
    handler: src/handlers/uploadAuctionPicture.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/picture
          cors: true
          authorizer: ${self:custom.authorizer}
  processAuctions:
    handler: src/handlers/processAuctions.handler
    events:
      - schedule: rate(1 minute)

custom:
  AuctionTable:
    name: !Ref AuctionTable
    arn: !GetAtt AuctionTable.Arn
  MailQueue:
    arn: ${cf:sls-notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:sls-notification-service-${self:provider.stage}.MailQueueUrl}
  AuctionsBucket:
    name: auctions-bucket-jh23g4-${self:provider.stage}
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:serverless-auth0-authorizer-${self:provider.stage}-auth
